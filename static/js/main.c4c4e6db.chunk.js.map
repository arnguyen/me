{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeTheme","state","theme","setState","this","className","classNames","onChange","checked","checkedIcon","onColor","onHandleColor","uncheckedIcon","offColor","offHandleColor","href","icon","faArrowDown","size","id","src","alt","class","title","download","target","rel","faGithubSquare","faLinkedin","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,YAAc,WAGE,UAFI,EAAKC,MAAfC,MAGJ,EAAKC,SAAS,CAAED,MAAO,SAEvB,EAAKC,SAAS,CAAED,MAAO,WAX3B,EAAKD,MAAM,CACTC,MAAO,QAHQ,E,0CAiBnB,WACE,IAAQA,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKG,UAAU,MAAf,UAEE,yBAAQA,UAAWC,IAAW,aAAwB,UAAVJ,EAAoB,eAAiB,eAAjF,UACE,cAAC,IAAD,CACEG,UAAU,SACVE,SAAUH,KAAKJ,YACfQ,QAAmB,UAAVN,EACTO,aAAa,EACbC,QAAQ,UACRC,cAAc,UACdC,eAAe,EACfC,SAAS,UACTC,eAAe,YAEjB,wEACA,mBAAGC,KAAK,SAAR,SAAiB,cAAC,IAAD,CAAiBC,KAAMC,IAAaC,KAAK,YAG5D,sBAAKC,GAAG,QAAQd,UAAWC,IAAW,OAAkB,UAAVJ,EAAoB,QAAU,QAA5E,UACE,sBAAKG,UAAWC,IAAW,QAAS,WAApC,UACE,2CACA,qBAAKc,IAAI,eAAeC,IAAI,OAC5B,qZAQF,sBAAKhB,UAAWC,IAAW,aAAc,WAAzC,UACE,6CACA,sBAAKgB,MAAM,QAAX,UACE,qBAAKF,IAAI,aAAaC,IAAI,YAC1B,8SAGoE,mBAAGN,KAAK,WAAR,mBAHpE,yEAOF,uBACA,sBAAKO,MAAM,SAAX,UACE,qBAAKF,IAAI,cAAcC,IAAI,WAC3B,qYAOF,uBACA,sBAAKC,MAAM,YAAX,UACE,qBAAKF,IAAI,gBAAgBC,IAAI,cAC7B,uWAQJ,sBAAKhB,UAAWC,IAAW,SAAU,UAAqB,UAAVJ,EAAoB,QAAU,QAA9E,UACE,yCACA,8BACE,uCADF,IACmB,qCADnB,IACkC,0CADlC,IACsD,8CADtD,IAC8E,8CAD9E,IACsG,uBACpG,2CAFF,IAEuB,wCAFvB,IAEyC,0CAFzC,IAE6D,yCAF7D,IAEgF,uBAC9E,wCAHF,IAGoB,uCAHpB,IAGqC,wCAHrC,IAGuD,4CAHvD,IAG6E,uCAH7E,IAG8F,6CAIhG,sBAAKiB,GAAG,SAASd,UAAWC,IAAW,SAAU,WAAjD,UACE,yCACA,wBAAQc,IAAI,4BAA4BG,MAAM,WAC9C,yEAEE,mBAAGR,KAAK,2BAA2BS,UAAQ,EAA3C,kBAFF,UASF,sBAAKL,GAAG,UAAUd,UAAWC,IAAW,UAAW,WAAnD,UACE,gDACA,mBAAGS,KAAK,6BAAR,SAAqC,sBAAMI,GAAG,QAAT,kCAFvC,IAEsF,uBACpF,mBAAGJ,KAAK,uDAAuDU,OAAO,SAASC,IAAI,sBAAnF,SAAyG,cAAC,IAAD,CAAiBV,KAAMW,IAAgBT,KAAK,SACrJ,mBAAGH,KAAK,8BAA8BU,OAAO,SAASC,IAAI,sBAA1D,SAAgF,cAAC,IAAD,CAAiBV,KAAMY,IAAYV,KAAK,sB,GA7GnGW,IAAMC,WCGxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c4c4e6db.chunk.js","sourcesContent":["import React from 'react';\nimport Switch from 'react-switch';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport './App.css';\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      theme: 'dark',\n    };\n  }\n\n  changeTheme = () => {\n    const { theme } = this.state;\n\n    if (theme === 'light') {\n        this.setState({ theme: 'dark' });\n    } else {\n        this.setState({ theme: 'light' });\n    }\n  };\n\n  render() {\n    const { theme } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <header className={classNames(\"App-header\", theme === 'light' ? 'light-header' : 'dark-header')}>\n          <Switch\n            className=\"switch\"\n            onChange={this.changeTheme}\n            checked={theme === 'light'}\n            checkedIcon={false}\n            onColor=\"#87ceeb\"\n            onHandleColor=\"#ffffff\"\n            uncheckedIcon={false}\n            offColor=\"#000000\"\n            offHandleColor=\"#f0c420\"\n          />\n          <h1>Hi. I'm Andrew. It's nice to meet you!</h1>\n          <a href=\"#begin\"><FontAwesomeIcon icon={faArrowDown} size=\"2x\"/></a>\n        </header>\n  \n        <div id=\"begin\" className={classNames(\"main\", theme === 'light' ? 'light' : 'dark')}>\n          <div className={classNames(\"about\", \"section\")}>\n            <h2>About Me.</h2>\n            <img src=\"/mainpic.jpg\" alt=\"me\" />\n            <p>\n              Hello there! It's great to meet you. I'm Andrew, a senior studying computer science at the University of Michigan. \n              I am a passionate programmer who enjoys coding to life all sorts of things. Outside of programming, \n              I love to run, read, play the guitar, and bake (although admittedly not very well!) \n              Feel free to ask me about any of my interests, technical or otherwise!\n            </p>\n          </div>\n    \n          <div className={classNames(\"experience\", \"section\")}>\n            <h2>Experience.</h2>\n            <div class=\"umich\">\n              <img src=\"/umich.jpg\" alt=\"block M\" />\n              <p>With courses such as Web Systems, UI Development, \n                 and Operating Systems, I have gained a broad range of experience \n                 through projects such as an Instagram clone, Pomodoro Web App, and an OS thread library.\n                 Due to our school's Honor Code, my repositories are private, but <a href=\"#connect\">reach</a>  \n                 &nbsp;out to me and I would love to share my experiences with you!\n              </p>\n            </div>\n            <br />\n            <div class=\"amazon\">\n              <img src=\"/amazon.jpg\" alt=\"amazon\" />\n              <p>\n                As a software engineering intern on the Amazon Photos web team, I was able to learn a lot about software development, and, \n                leveraging my skills in front-end development, I used a combination of ReactJS, Flux, and Sass to create a highly \n                requested slideshow feature for users to display their albums, complete with different speed and transition \n                options. \n              </p>\n            </div>\n            <br />\n            <div class=\"atlassian\">\n              <img src=\"atlassian.png\" alt=\"atlassian\" />\n              <p>\n                A current software engineering intern on the Trello Ecosystems team at Atlassian, I have been able \n                to continue to leverage my knowledge of front-end development to build beautiful user interfaces. Utilizing a \n                combination of ReactJS and TypeScript, I am working on making the Trello app look and perform better than ever.\n              </p>\n            </div>\n          </div>\n    \n          <div className={classNames(\"skills\", \"section\", theme === 'light' ? 'light' : 'dark')}>\n            <h2>Skills.</h2>\n            <p>\n              <code>C++</code> <code>C</code> <code>Python</code> <code>JavaScript</code> <code>TypeScript</code> <br/> \n              <code>ReactJs</code> <code>Flux</code> <code>jQuery</code> <code>Flask</code> <br/>\n              <code>HTML</code> <code>CSS</code> <code>Sass</code> <code>Less CSS</code> <code>SQL</code> <code>Git</code>\n            </p>\n          </div>\n    \n          <div id=\"resume\" className={classNames(\"resume\", \"section\")}>\n            <h2>Resume.</h2>\n            <iframe src=\"/Nguyen-Andrew-Resume.pdf\" title=\"Resume\"/>\n            <p>\n              Also feel free to download my resume&nbsp;\n              <a href=\"Nguyen-Andrew-Resume.pdf\" download>\n                here\n              </a>\n              .    \n            </p>\n          </div>\n    \n          <div id=\"connect\" className={classNames(\"connect\", \"section\")}>\n            <h2>Let's Connect!</h2>\n            <a href=\"mailto: ngandrew@umich.edu\"><code id=\"email\">ngandrew@umich.edu</code></a> <br/>\n            <a href=\"https://www.linkedin.com/in/andrew-nguyen-084279179/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithubSquare} size=\"5x\"/></a>\n            <a href=\"https://github.com/arnguyen\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} size=\"5x\"/></a>\n          </div>    \n        </div>\n      </div>\n    );\n  }\n  \n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}